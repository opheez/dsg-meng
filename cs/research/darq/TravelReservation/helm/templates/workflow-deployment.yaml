{{- range .Values.orchestrators }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: "orchestrator"
  name: "orchestrator{{ .num }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: "orchestrator"
  strategy: {}
  template:
    metadata:
      labels:
        service: "orchestrator"
    spec:
      priorityClassName: high-priority
      containers:
        - command:
            - "TravelReservation/TravelReservation"
          args: 
            - "-t"
            - "orchestrator"
            - "-n"
            - "{{ .num }}"
          image: tianyuli96/faster:latest
          name: "orchestrator{{ .num }}"
          ports:
            - containerPort: {{ $.Values.orchestrator_port }}
          volumeMounts:
            - name: orchestratorstorage{{ .num }}
              mountPath: "/mnt/plrs"
          resources:
            requests:
              cpu: 2000m
            limits:
              cpu: 4000m
          envFrom:
            - configMapRef:
                name: env-config
      volumes:
        - name: orchestratorstorage{{ .num }}
          persistentVolumeClaim:
            claimName: orchestrator{{ .num }}-pvc
      nodeSelector:
        nodepool: dsebench2
      restartPolicy: Always
---
{{- end }}
